{"version":3,"sources":["webpack:///./src/components/spikeTutorial.js","webpack:///./src/pages/spike.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SpikeTutorial","react_default","a","createElement","className","Spike","layout","seo","title","spikeTutorial","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Navbar","gatsby_browser_entry","to","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","navbar","Layout","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-spike-js-7e1bce1836bb4a42fa7b.js","sourcesContent":["import React from 'react';\n\nconst SpikeTutorial = () => (\n    <div>\n        <h2>Simulador Spike (Guia de Instalação)</h2>\n        <h4>Etapa 1: Instalar o RISC-V Frontend Server</h4>\n        <ol className=\"tutorial\">\n            <li>Clone o repositório <strong>riscv-fesvr</strong> (RISC-V Frontend Server).\n                <code>\n                    git clone https://github.com/riscv/riscv-fesvr.git\n                </code>\n            </li>\n            <li>\n                Em seguida, entre no repositório clonado.\n                <code>\n                    cd riscv-fesvr\n                </code>\n            </li>\n            <li>\n                Crie a uma pasta chamada build e entre nela.\n                <code>\n                    mkdir build && cd build\n                </code>\n            </li>\n            <li>\n                Dentro da pasta o seguinte comando de configuração.\n                <code>\n                    ../configure --prefix=$RISCV --target=riscv64-unknown-elf\n                </code>\n            </li>\n            <li>\n                Para finalizar a primeira etapa...\n                <code>\n                    [sudo] make install\n                </code>\n            </li>\n        </ol>\n        <h4>Etapa 2: Instalar o Spike RISC-V ISA Simulator</h4>\n        <ol className=\"tutorial\">\n            <li>Clone o repositório <strong>riscv-isa-sim</strong> (RISC-V ISA Simulator).\n                <code>\n                    git clone https://github.com/riscv/riscv-isa-sim.git\n                </code>\n            </li>\n            <li>Instale o pacote device-tree compiler.\n                <code>\n                    apt-get install device-tree-compiler\n                </code>\n            </li>\n            <li>\n                Entre no repositório clonado.\n                <code>\n                    cd riscv-isa-sim\n                </code>\n            </li>\n            <li>\n                Crie a uma pasta chamada build e entre nela.\n                <code>\n                    mkdir build && cd build\n                </code>\n            </li>\n            <li>\n                Dentro da pasta o seguinte comando de configuração.\n                <code>\n                    ../configure --prefix=$RISCV --with-fesvr=$RISCV\n                </code>\n            </li>\n            <li>\n                Execute estes dois comandos para finalizar.\n                <code>\n                    make<br />\n                    [sudo] make install\n                </code>\n            </li>\n        </ol>\n    </div>\n\n)\n\nexport default SpikeTutorial;","import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport SpikeTutorial from '../components/spikeTutorial'\n\nconst Spike = () => (\n  <Layout>\n    <SEO title=\"Instalação Spike\" />\n    <SpikeTutorial/>\n  </Layout>\n)\n\nexport default Spike\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Navbar = () => (\n    <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/materiais\">Materiais</Link>\n        </li>\n        {/* <li>\n            <Link to=\"/links\">Links Úteis</Link>\n        </li> */}\n\n    </ul>\n)\n\nexport default Navbar\n","import { Link } from 'gatsby'\nimport Navbar from '../components/navbar'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: '#3D2D2D',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: '#F7F7F7',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <Navbar />\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}